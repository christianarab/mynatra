class <%= @name_singular.capitalize %>
  attr_accessor :id, :<%= @attributes[0] %>, :<%= @attributes[1] %> #The templating in generator will need to change accordingly for setters and getters

  @@<%= @name_plural.capitalize %> = []
  @@count = 0

  def delete
    @@<%= @name_plural.capitalize %>.each_with_index do |<%= @name_singular%>, index|
      if self.id == <%= @name_singular%>.id
        @@<%= @name_plural.capitalize %>.delete_at(index)
      end
    end
  end

  def self.create(id)
    <%= @name_singular%> = <%= name.capitalize %>.new
    <%= @name_singular%>.id = id
    @@<%= @name_plural.capitalize %> << <%= @name_singular%>
  end

  def self.find_by_id(id)
    @@<%= @name_plural.capitalize %>.each do |<%= @name_singular%>|
      if <%= @name_singular%>.id == id
        return <%= @name_singular%>
      end
    end
  end

  def save
    if self.id.nil?
      self.id = new_id
      @@<%= @name_plural.capitalize %>.push(self)
    else
      self.id = self.id.to_i
      @@<%= @name_plural.capitalize %>.each_with_index do |<%= @name_singular %>, index|
        if self.id == <%= @name_singular %>.id
          @@<%= @name_plural.capitalize %>[index] = self
        end
      end
    end
  end

  def self.create_many
    @@<%= @name_plural.capitalize %> = (1..25).map do |num| 
      <%= @name_singular%> = <%= name.capitalize %>.new
      <%= @name_singular%>.id = "<%= @name_singular%>#{num}"
      <%= @name_singular%>
    end
  end

  def self.all
    @@<%= @name_plural.capitalize %>
  end

  def new_id
    @@count += 1
  end
end
